openapi: 3.0.3
info:
  title: Task Manager
  version: 1.0.0
  description: Your project description
paths:
  /accounts/api/activate/{uidb64}/{token}/:
    get:
      operationId: accounts_api_activate_retrieve
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /accounts/api/logout/:
    post:
      operationId: accounts_api_logout_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /accounts/api/logout_all/:
    post:
      operationId: accounts_api_logout_all_create
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /accounts/api/register/:
    post:
      operationId: accounts_api_register_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /accounts/api/resend-activation-email/:
    post:
      operationId: accounts_api_resend_activation_email_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendActivationEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendActivationEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendActivationEmail'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendActivationEmail'
          description: ''
  /accounts/api/resend-otp/:
    post:
      operationId: accounts_api_resend_otp_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendOTP'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendOTP'
          description: ''
  /accounts/api/send-otp/:
    post:
      operationId: accounts_api_send_otp_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendOTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendOTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendOTP'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendOTP'
          description: ''
  /accounts/api/token/:
    post:
      operationId: accounts_api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /accounts/api/token/refresh/:
    post:
      operationId: accounts_api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /accounts/api/users/:
    get:
      operationId: accounts_api_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomUserList'
          description: ''
  /accounts/api/users/{id}/:
    get:
      operationId: accounts_api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /accounts/api/verify-me/:
    get:
      operationId: accounts_api_verify_me_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /accounts/api/verify-otp/:
    post:
      operationId: accounts_api_verify_otp_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OTP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OTP'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTP'
          description: ''
  /accounts/password-reset/:
    post:
      operationId: accounts_password_reset_create
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
  /accounts/password-reset-confirm/{uidb64}/{token}/:
    post:
      operationId: accounts_password_reset_confirm_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
  /boards/:
    get:
      operationId: boards_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShortBoardList'
          description: ''
    post:
      operationId: boards_create
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShortBoard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShortBoard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShortBoard'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortBoard'
          description: ''
  /boards/{id}/:
    get:
      operationId: boards_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: ''
    put:
      operationId: boards_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Board'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Board'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Board'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: ''
    patch:
      operationId: boards_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBoard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBoard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBoard'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: ''
    delete:
      operationId: boards_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /boards/attachments/:
    get:
      operationId: boards_attachments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - boards
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttachmentList'
          description: ''
    post:
      operationId: boards_attachments_create
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attachment'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: ''
  /boards/attachments/{id}/:
    get:
      operationId: boards_attachments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: ''
    put:
      operationId: boards_attachments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attachment'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: ''
    patch:
      operationId: boards_attachments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttachment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttachment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttachment'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: ''
    delete:
      operationId: boards_attachments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /boards/comments/:
    get:
      operationId: boards_comments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: boards_comments_create
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /boards/comments/{id}/:
    get:
      operationId: boards_comments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: boards_comments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: boards_comments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: boards_comments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /boards/items/:
    get:
      operationId: boards_items_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedItemList'
          description: ''
    post:
      operationId: boards_items_create
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /boards/items/{id}/:
    get:
      operationId: boards_items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: boards_items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    patch:
      operationId: boards_items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItem'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: boards_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /boards/labels/:
    get:
      operationId: boards_labels_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelList'
          description: ''
    post:
      operationId: boards_labels_create
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Label'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
  /boards/labels/{id}/:
    get:
      operationId: boards_labels_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    put:
      operationId: boards_labels_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Label'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    patch:
      operationId: boards_labels_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLabel'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
          description: ''
    delete:
      operationId: boards_labels_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /boards/lists/:
    get:
      operationId: boards_lists_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListList'
          description: ''
    post:
      operationId: boards_lists_create
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/List'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/List'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
  /boards/lists/{id}/:
    get:
      operationId: boards_lists_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    put:
      operationId: boards_lists_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/List'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/List'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/List'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    patch:
      operationId: boards_lists_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedList'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/List'
          description: ''
    delete:
      operationId: boards_lists_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /boards/star/:
    post:
      operationId: boards_star_create
      tags:
      - boards
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /notifications/:
    get:
      operationId: notifications_retrieve
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: notifications_create
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /projects/:
    get:
      operationId: projects_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShortProjectList'
          description: ''
    post:
      operationId: projects_create
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /projects/{id}/:
    get:
      operationId: projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /projects/{id}/invite/:
    post:
      operationId: projects_invite_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /projects/{id}/members/:
    get:
      operationId: projects_members_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjectMembershipList'
          description: ''
  /projects/join/{token}/:
    post:
      operationId: projects_join_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /projects/members/{id}/:
    put:
      operationId: projects_members_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectMembership'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectMembership'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectMembership'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMembership'
          description: ''
    delete:
      operationId: projects_members_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - projects
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AccessLevelEnum:
      enum:
      - 1
      - 2
      type: integer
      description: |-
        * `1` - Member
        * `2` - Admin
    Attachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        upload:
          type: string
          format: uri
        item:
          type: integer
      required:
      - id
      - item
      - upload
    Board:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        image:
          type: string
          format: uri
        image_url:
          type: string
          format: uri
          maxLength: 200
        color:
          type: string
          maxLength: 6
        created_at:
          type: string
          format: date-time
        owner:
          type: string
          readOnly: true
        lists:
          type: string
          readOnly: true
        is_starred:
          type: string
          readOnly: true
      required:
      - id
      - is_starred
      - lists
      - owner
      - title
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        body:
          type: string
        created_at:
          type: string
          format: date-time
      required:
      - author
      - body
      - id
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 255
        last_name:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 255
        full_name:
          type: string
          readOnly: true
        profile_pic:
          type: string
          format: uri
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - full_name
      - id
      - password
    Item:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
          readOnly: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
          readOnly: true
        assigned_to:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        image:
          type: string
          format: uri
        image_url:
          type: string
          format: uri
          maxLength: 200
        color:
          type: string
          maxLength: 6
        order:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,15})?$
          nullable: true
        due_date:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
      required:
      - assigned_to
      - attachments
      - id
      - labels
      - title
    Label:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        color:
          type: string
          maxLength: 255
      required:
      - color
      - id
    List:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        order:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,15})?$
          nullable: true
        created_at:
          type: string
          format: date-time
      required:
      - id
      - items
      - title
    OTP:
      type: object
      properties:
        email:
          type: string
          format: email
        otp:
          type: string
          maxLength: 6
      required:
      - email
      - otp
    PaginatedAttachmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    PaginatedCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedCustomUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomUser'
    PaginatedItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    PaginatedLabelList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    PaginatedListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/List'
    PaginatedProjectMembershipList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMembership'
    PaginatedShortBoardList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShortBoard'
    PaginatedShortProjectList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShortProject'
    PasswordChange:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
        password_confirm:
          type: string
          writeOnly: true
      required:
      - password
      - password_confirm
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PatchedAttachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        upload:
          type: string
          format: uri
        item:
          type: integer
    PatchedBoard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        image:
          type: string
          format: uri
        image_url:
          type: string
          format: uri
          maxLength: 200
        color:
          type: string
          maxLength: 6
        created_at:
          type: string
          format: date-time
        owner:
          type: string
          readOnly: true
        lists:
          type: string
          readOnly: true
        is_starred:
          type: string
          readOnly: true
    PatchedComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        body:
          type: string
        created_at:
          type: string
          format: date-time
    PatchedItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
          readOnly: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
          readOnly: true
        assigned_to:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        image:
          type: string
          format: uri
        image_url:
          type: string
          format: uri
          maxLength: 200
        color:
          type: string
          maxLength: 6
        order:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,15})?$
          nullable: true
        due_date:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
    PatchedLabel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        color:
          type: string
          maxLength: 255
    PatchedList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        order:
          type: string
          format: decimal
          pattern: ^-?\d{0,15}(?:\.\d{0,15})?$
          nullable: true
        created_at:
          type: string
          format: date-time
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          allOf:
          - $ref: '#/components/schemas/CustomUser'
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        members:
          type: string
          readOnly: true
      required:
      - id
      - members
      - owner
      - title
    ProjectMembership:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        username:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        profile_pic:
          type: string
          readOnly: true
        access_level:
          allOf:
          - $ref: '#/components/schemas/AccessLevelEnum'
          minimum: -2147483648
          maximum: 2147483647
      required:
      - email
      - full_name
      - id
      - profile_pic
      - username
    ResendActivationEmail:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SendOTP:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    ShortBoard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        image:
          type: string
          format: uri
        image_url:
          type: string
          format: uri
          maxLength: 200
        color:
          type: string
          maxLength: 6
        owner:
          type: string
          readOnly: true
        is_starred:
          type: string
          readOnly: true
        list_count:
          type: string
          readOnly: true
        item_count:
          type: string
          readOnly: true
      required:
      - id
      - is_starred
      - item_count
      - list_count
      - owner
      - title
    ShortProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
      required:
      - id
      - title
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
